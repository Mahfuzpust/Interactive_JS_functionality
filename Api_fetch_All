const makeRequest = async (url, config) => {
   const res = await fetch(url,config);
   if(!res.ok){
    const message = `Error : ${res.status}`;
    throw new Error(message);
   }
   const data = await res.json();
   return data;
}

const getData = () => {
    makeRequest('https://jsonplaceholder.typicode.com/posts')
    .then((res) => console.log(res))
    .catch((err) => console.log(err))
};

getData();

const sendData = () => {
    makeRequest('https://jsonplaceholder.typicode.com/posts',
    {
        method: 'POST',
        body: JSON.stringify({
          title: 'foo',
          body: 'bar',
          userId: 1,
        }),
        headers: {
          'Content-type': 'application/json; charset=UTF-8',
        },
      })
    .then((res) => console.log(res))
    .catch((err) => console.log(err))
};

sendData();


const updateData = () => {
    makeRequest('https://jsonplaceholder.typicode.com/posts/1',
    {
        method: 'PUT',
        body: JSON.stringify({
            id : 1,
          title: 'mahfuz',
          body: 'bar',
          userId: 1,
        }),
        headers: {
          'Content-type': 'application/json; charset=UTF-8',
        },
      })
    .then((res) => console.log(res))
    .catch((err) => console.log(err))
};

updateData();

const singleData = () => {
    makeRequest('https://jsonplaceholder.typicode.com/posts/1',
    {
        method: 'PATCH',
        body: JSON.stringify({
          title: 'mahfuz khan Raj',
        }),
        headers: {
          'Content-type': 'application/json; charset=UTF-8',
        },
      })
    .then((res) => console.log(res))
    .catch((err) => console.log(err))
};

singleData();

const deleteData = () => {
    makeRequest('https://jsonplaceholder.typicode.com/posts/1',
    {
        method: 'DELETE',
        
      })
    .then((res) => console.log(res))
    .catch((err) => console.log(err))
};

deleteData();
